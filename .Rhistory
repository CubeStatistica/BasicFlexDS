library(flexdashboard)
head(iris)
renderPlot({
ggplot(data = iris, aes(x=Species, y= input$Y, fill = Species))+
geom_bar(stat="identity",fill = "purple")+
ggtitle("Count of Species")
})
library(flexdashboard)
library(ggplot2)
library(shiny)
varSelectInput("Y", "Variable_Y:", iris)
head(iris)
renderPlot({
ggplot(data = iris, aes(x=Species, y= input$Y, fill = Species))+
geom_bar(stat="identity",fill = "purple")+
ggtitle("Count of Species")
})
# Chunk 1: setup
library(flexdashboard)
library(tidyverse)
view(iris)
View(iris)
install.packages("remotes")
remotes::install_github("rstudio/bslib")
library(flexdashboard)
library(tidyverse)
library(shiny)
library(RWeka)
library(party)
library(bslib)
m1 <- J48(Species~., data = iris)
if(require("party", quietly = TRUE)) plot(m1)
Row
---------------------------------------------------------------------
```{r}
ggplot(data = iris, aes(x= Species, y= !!input$Y))+
geom_bar(stat="identity")+
ggtitle("Count of Species")+
scale_fill_brewer( palette = "Set2")
renderPlot({
ggplot(data = iris, aes(x= Species, y= !!input$Y))+
geom_bar(stat="identity")+
ggtitle("Count of Species")+
scale_fill_brewer( palette = "Set2")
})
ggplot(data = iris, aes(x= Species, y= Petal.Width,fill = Species))+
geom_jitter(size = Species)+
geom_text(aes(label = Petal.Width), vjust = -0.2)+
ggtitle("Count of Species")+
scale_fill_brewer( palette = "Set2")
ggplot(data = iris, aes(x= Species, y= Petal.Width,fill = Species))+
geom_jitter(size = Species)+
geom_text(aes(label = Petal.Width), vjust = -0.2)+
ggtitle("Count of Species")+
scale_fill_brewer( palette = "Set2")
```{r}
ggplot(iris, aes(x="", y=Petal.Width , fill=Species)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
scale_fill_brewer( palette = "Set2")
ggplot(iris, aes(x="", y=Petal.Width , fill=Species)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
scale_fill_brewer( palette = "Set2")
Machine Learning Model
=====================================================================
Column
---------------------------------------------------------------------
ggplot(iris, aes(x="", y=Petal.Width , fill=Species)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
scale_fill_brewer( palette = "Set2")
ggplot(iris, aes(x="", y=Petal.Width , fill=Species)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
scale_fill_brewer( palette = "Set2")
ggplot(iris, aes(x="", y=Petal.Width , fill=Species)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
scale_fill_brewer( palette = "Set2")
ggplot(iris, aes(x="", y=Petal.Width , fill=Species)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
scale_fill_brewer( palette = "Set2")
ggplot(data = iris, aes(x= Species, y= Petal.Width,fill = Species))+
geom_jitter(size = Species)+
geom_text(aes(label = Petal.Width), vjust = -0.2)+
ggtitle("Count of Species")+
scale_fill_brewer( palette = "Set2")
ggplot(data = iris, aes(x= Species, y= Petal.Width,fill = Species))+
geom_jitter()+
geom_text(aes(label = Petal.Width), vjust = -0.2)+
ggtitle("Count of Species")+
scale_fill_brewer( palette = "Set2")
renderPlot({
ggplot(data = iris, aes(x= Species, y= !!input$Y, fill = Species))+
geom_bar(stat="identity")+
ggtitle("Count of Species")+
scale_fill_brewer( palette = "Dark2")
})
ggplot(data = iris, aes(x= Species, y= Petal.Width,  fill = Species))+
geom_jitter()+
ggtitle("Count of Species")+
scale_fill_brewer( palette = "Set2")
ggplot(data = iris, aes(x= Species, y= Petal.Width,  fill = Species))+
geom_jitter()+
ggtitle("Count of Species")+
scale_fill_brewer( palette = "Set2")
ggplot(data = iris, aes(x= Species, y= Petal.Width, fill = Species, size = Species))+
geom_jitter()+
ggtitle("Count of Species")+
scale_fill_brewer( palette = "Set2")
ggplot(data = iris, aes(x= Species, y= Petal.Width, color = Species, size = Species))+
geom_jitter()+
ggtitle("Count of Species")+
scale_fill_brewer( palette = "Set2")
